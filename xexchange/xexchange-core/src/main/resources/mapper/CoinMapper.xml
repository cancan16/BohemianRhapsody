<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whoiszxl.core.entity.dao.CoinMapper">
  <resultMap id="BaseResultMap" type="com.whoiszxl.core.entity.entity.Coin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coin_name" jdbcType="VARCHAR" property="coin_name" />
    <result column="coin_mark" jdbcType="VARCHAR" property="coin_mark" />
    <result column="coin_logo" jdbcType="VARCHAR" property="coin_logo" />
    <result column="coin_type" jdbcType="VARCHAR" property="coin_type" />
    <result column="coin_total_num" jdbcType="DECIMAL" property="coin_total_num" />
    <result column="coin_decimals_num" jdbcType="INTEGER" property="coin_decimals_num" />
    <result column="coin_buy_fee" jdbcType="DECIMAL" property="coin_buy_fee" />
    <result column="coin_sell_fee" jdbcType="DECIMAL" property="coin_sell_fee" />
    <result column="coin_url" jdbcType="VARCHAR" property="coin_url" />
    <result column="contract_address" jdbcType="VARCHAR" property="contract_address" />
    <result column="rpc_url" jdbcType="VARCHAR" property="rpc_url" />
    <result column="rpc_username" jdbcType="VARCHAR" property="rpc_username" />
    <result column="rpc_password" jdbcType="VARCHAR" property="rpc_password" />
    <result column="max_withdraw" jdbcType="DECIMAL" property="max_withdraw" />
    <result column="min_withdraw" jdbcType="DECIMAL" property="min_withdraw" />
    <result column="fee_withdraw" jdbcType="DECIMAL" property="fee_withdraw" />
    <result column="wallet_url" jdbcType="VARCHAR" property="wallet_url" />
    <result column="wallet_key" jdbcType="VARCHAR" property="wallet_key" />
    <result column="confirms" jdbcType="Integer" property="confirms" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="status" jdbcType="Integer" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="created_at" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updated_at" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.whoiszxl.core.entity.entity.CoinWithBLOBs">
    <result column="coin_content" jdbcType="LONGVARCHAR" property="coin_content" />
    <result column="contract_abi" jdbcType="LONGVARCHAR" property="contract_abi" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, coin_name, coin_mark, coin_logo, coin_type, coin_total_num, coin_decimals_num, 
    coin_buy_fee, coin_sell_fee, coin_url, contract_address, rpc_url, rpc_username, rpc_password, 
    max_withdraw, min_withdraw, fee_withdraw, wallet_url, wallet_key, confirms, sort, 
    status, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List">
    coin_content, contract_abi
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.whoiszxl.core.entity.entity.CoinExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from coin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.whoiszxl.core.entity.entity.CoinExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from coin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.whoiszxl.core.entity.entity.CoinExample">
    delete from coin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.whoiszxl.core.entity.entity.CoinWithBLOBs">
    insert into coin (id, coin_name, coin_mark, 
      coin_logo, coin_type, coin_total_num, 
      coin_decimals_num, coin_buy_fee, coin_sell_fee, 
      coin_url, contract_address, rpc_url, 
      rpc_username, rpc_password, max_withdraw, 
      min_withdraw, fee_withdraw, wallet_url, 
      wallet_key, confirms, sort, 
      status, created_at, updated_at, 
      coin_content, contract_abi)
    values (#{id,jdbcType=INTEGER}, #{coin_name,jdbcType=VARCHAR}, #{coin_mark,jdbcType=VARCHAR}, 
      #{coin_logo,jdbcType=VARCHAR}, #{coin_type,jdbcType=VARCHAR}, #{coin_total_num,jdbcType=DECIMAL}, 
      #{coin_decimals_num,jdbcType=INTEGER}, #{coin_buy_fee,jdbcType=DECIMAL}, #{coin_sell_fee,jdbcType=DECIMAL}, 
      #{coin_url,jdbcType=VARCHAR}, #{contract_address,jdbcType=VARCHAR}, #{rpc_url,jdbcType=VARCHAR}, 
      #{rpc_username,jdbcType=VARCHAR}, #{rpc_password,jdbcType=VARCHAR}, #{max_withdraw,jdbcType=DECIMAL}, 
      #{min_withdraw,jdbcType=DECIMAL}, #{fee_withdraw,jdbcType=DECIMAL}, #{wallet_url,jdbcType=VARCHAR}, 
      #{wallet_key,jdbcType=VARCHAR}, #{confirms,jdbcType=Integer}, #{sort,jdbcType=INTEGER}, 
      #{status,jdbcType=Integer}, #{created_at,jdbcType=TIMESTAMP}, #{updated_at,jdbcType=TIMESTAMP}, 
      #{coin_content,jdbcType=LONGVARCHAR}, #{contract_abi,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.whoiszxl.core.entity.entity.CoinWithBLOBs">
    insert into coin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="coin_name != null">
        coin_name,
      </if>
      <if test="coin_mark != null">
        coin_mark,
      </if>
      <if test="coin_logo != null">
        coin_logo,
      </if>
      <if test="coin_type != null">
        coin_type,
      </if>
      <if test="coin_total_num != null">
        coin_total_num,
      </if>
      <if test="coin_decimals_num != null">
        coin_decimals_num,
      </if>
      <if test="coin_buy_fee != null">
        coin_buy_fee,
      </if>
      <if test="coin_sell_fee != null">
        coin_sell_fee,
      </if>
      <if test="coin_url != null">
        coin_url,
      </if>
      <if test="contract_address != null">
        contract_address,
      </if>
      <if test="rpc_url != null">
        rpc_url,
      </if>
      <if test="rpc_username != null">
        rpc_username,
      </if>
      <if test="rpc_password != null">
        rpc_password,
      </if>
      <if test="max_withdraw != null">
        max_withdraw,
      </if>
      <if test="min_withdraw != null">
        min_withdraw,
      </if>
      <if test="fee_withdraw != null">
        fee_withdraw,
      </if>
      <if test="wallet_url != null">
        wallet_url,
      </if>
      <if test="wallet_key != null">
        wallet_key,
      </if>
      <if test="confirms != null">
        confirms,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created_at != null">
        created_at,
      </if>
      <if test="updated_at != null">
        updated_at,
      </if>
      <if test="coin_content != null">
        coin_content,
      </if>
      <if test="contract_abi != null">
        contract_abi,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coin_name != null">
        #{coin_name,jdbcType=VARCHAR},
      </if>
      <if test="coin_mark != null">
        #{coin_mark,jdbcType=VARCHAR},
      </if>
      <if test="coin_logo != null">
        #{coin_logo,jdbcType=VARCHAR},
      </if>
      <if test="coin_type != null">
        #{coin_type,jdbcType=VARCHAR},
      </if>
      <if test="coin_total_num != null">
        #{coin_total_num,jdbcType=DECIMAL},
      </if>
      <if test="coin_decimals_num != null">
        #{coin_decimals_num,jdbcType=INTEGER},
      </if>
      <if test="coin_buy_fee != null">
        #{coin_buy_fee,jdbcType=DECIMAL},
      </if>
      <if test="coin_sell_fee != null">
        #{coin_sell_fee,jdbcType=DECIMAL},
      </if>
      <if test="coin_url != null">
        #{coin_url,jdbcType=VARCHAR},
      </if>
      <if test="contract_address != null">
        #{contract_address,jdbcType=VARCHAR},
      </if>
      <if test="rpc_url != null">
        #{rpc_url,jdbcType=VARCHAR},
      </if>
      <if test="rpc_username != null">
        #{rpc_username,jdbcType=VARCHAR},
      </if>
      <if test="rpc_password != null">
        #{rpc_password,jdbcType=VARCHAR},
      </if>
      <if test="max_withdraw != null">
        #{max_withdraw,jdbcType=DECIMAL},
      </if>
      <if test="min_withdraw != null">
        #{min_withdraw,jdbcType=DECIMAL},
      </if>
      <if test="fee_withdraw != null">
        #{fee_withdraw,jdbcType=DECIMAL},
      </if>
      <if test="wallet_url != null">
        #{wallet_url,jdbcType=VARCHAR},
      </if>
      <if test="wallet_key != null">
        #{wallet_key,jdbcType=VARCHAR},
      </if>
      <if test="confirms != null">
        #{confirms,jdbcType=Integer},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=Integer},
      </if>
      <if test="created_at != null">
        #{created_at,jdbcType=TIMESTAMP},
      </if>
      <if test="updated_at != null">
        #{updated_at,jdbcType=TIMESTAMP},
      </if>
      <if test="coin_content != null">
        #{coin_content,jdbcType=LONGVARCHAR},
      </if>
      <if test="contract_abi != null">
        #{contract_abi,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.whoiszxl.core.entity.entity.CoinExample" resultType="java.lang.Long">
    select count(*) from coin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.coin_name != null">
        coin_name = #{record.coin_name,jdbcType=VARCHAR},
      </if>
      <if test="record.coin_mark != null">
        coin_mark = #{record.coin_mark,jdbcType=VARCHAR},
      </if>
      <if test="record.coin_logo != null">
        coin_logo = #{record.coin_logo,jdbcType=VARCHAR},
      </if>
      <if test="record.coin_type != null">
        coin_type = #{record.coin_type,jdbcType=VARCHAR},
      </if>
      <if test="record.coin_total_num != null">
        coin_total_num = #{record.coin_total_num,jdbcType=DECIMAL},
      </if>
      <if test="record.coin_decimals_num != null">
        coin_decimals_num = #{record.coin_decimals_num,jdbcType=INTEGER},
      </if>
      <if test="record.coin_buy_fee != null">
        coin_buy_fee = #{record.coin_buy_fee,jdbcType=DECIMAL},
      </if>
      <if test="record.coin_sell_fee != null">
        coin_sell_fee = #{record.coin_sell_fee,jdbcType=DECIMAL},
      </if>
      <if test="record.coin_url != null">
        coin_url = #{record.coin_url,jdbcType=VARCHAR},
      </if>
      <if test="record.contract_address != null">
        contract_address = #{record.contract_address,jdbcType=VARCHAR},
      </if>
      <if test="record.rpc_url != null">
        rpc_url = #{record.rpc_url,jdbcType=VARCHAR},
      </if>
      <if test="record.rpc_username != null">
        rpc_username = #{record.rpc_username,jdbcType=VARCHAR},
      </if>
      <if test="record.rpc_password != null">
        rpc_password = #{record.rpc_password,jdbcType=VARCHAR},
      </if>
      <if test="record.max_withdraw != null">
        max_withdraw = #{record.max_withdraw,jdbcType=DECIMAL},
      </if>
      <if test="record.min_withdraw != null">
        min_withdraw = #{record.min_withdraw,jdbcType=DECIMAL},
      </if>
      <if test="record.fee_withdraw != null">
        fee_withdraw = #{record.fee_withdraw,jdbcType=DECIMAL},
      </if>
      <if test="record.wallet_url != null">
        wallet_url = #{record.wallet_url,jdbcType=VARCHAR},
      </if>
      <if test="record.wallet_key != null">
        wallet_key = #{record.wallet_key,jdbcType=VARCHAR},
      </if>
      <if test="record.confirms != null">
        confirms = #{record.confirms,jdbcType=Integer},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=Integer},
      </if>
      <if test="record.created_at != null">
        created_at = #{record.created_at,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated_at != null">
        updated_at = #{record.updated_at,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coin_content != null">
        coin_content = #{record.coin_content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.contract_abi != null">
        contract_abi = #{record.contract_abi,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update coin
    set id = #{record.id,jdbcType=INTEGER},
      coin_name = #{record.coin_name,jdbcType=VARCHAR},
      coin_mark = #{record.coin_mark,jdbcType=VARCHAR},
      coin_logo = #{record.coin_logo,jdbcType=VARCHAR},
      coin_type = #{record.coin_type,jdbcType=VARCHAR},
      coin_total_num = #{record.coin_total_num,jdbcType=DECIMAL},
      coin_decimals_num = #{record.coin_decimals_num,jdbcType=INTEGER},
      coin_buy_fee = #{record.coin_buy_fee,jdbcType=DECIMAL},
      coin_sell_fee = #{record.coin_sell_fee,jdbcType=DECIMAL},
      coin_url = #{record.coin_url,jdbcType=VARCHAR},
      contract_address = #{record.contract_address,jdbcType=VARCHAR},
      rpc_url = #{record.rpc_url,jdbcType=VARCHAR},
      rpc_username = #{record.rpc_username,jdbcType=VARCHAR},
      rpc_password = #{record.rpc_password,jdbcType=VARCHAR},
      max_withdraw = #{record.max_withdraw,jdbcType=DECIMAL},
      min_withdraw = #{record.min_withdraw,jdbcType=DECIMAL},
      fee_withdraw = #{record.fee_withdraw,jdbcType=DECIMAL},
      wallet_url = #{record.wallet_url,jdbcType=VARCHAR},
      wallet_key = #{record.wallet_key,jdbcType=VARCHAR},
      confirms = #{record.confirms,jdbcType=Integer},
      sort = #{record.sort,jdbcType=INTEGER},
      status = #{record.status,jdbcType=Integer},
      created_at = #{record.created_at,jdbcType=TIMESTAMP},
      updated_at = #{record.updated_at,jdbcType=TIMESTAMP},
      coin_content = #{record.coin_content,jdbcType=LONGVARCHAR},
      contract_abi = #{record.contract_abi,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coin
    set id = #{record.id,jdbcType=INTEGER},
      coin_name = #{record.coin_name,jdbcType=VARCHAR},
      coin_mark = #{record.coin_mark,jdbcType=VARCHAR},
      coin_logo = #{record.coin_logo,jdbcType=VARCHAR},
      coin_type = #{record.coin_type,jdbcType=VARCHAR},
      coin_total_num = #{record.coin_total_num,jdbcType=DECIMAL},
      coin_decimals_num = #{record.coin_decimals_num,jdbcType=INTEGER},
      coin_buy_fee = #{record.coin_buy_fee,jdbcType=DECIMAL},
      coin_sell_fee = #{record.coin_sell_fee,jdbcType=DECIMAL},
      coin_url = #{record.coin_url,jdbcType=VARCHAR},
      contract_address = #{record.contract_address,jdbcType=VARCHAR},
      rpc_url = #{record.rpc_url,jdbcType=VARCHAR},
      rpc_username = #{record.rpc_username,jdbcType=VARCHAR},
      rpc_password = #{record.rpc_password,jdbcType=VARCHAR},
      max_withdraw = #{record.max_withdraw,jdbcType=DECIMAL},
      min_withdraw = #{record.min_withdraw,jdbcType=DECIMAL},
      fee_withdraw = #{record.fee_withdraw,jdbcType=DECIMAL},
      wallet_url = #{record.wallet_url,jdbcType=VARCHAR},
      wallet_key = #{record.wallet_key,jdbcType=VARCHAR},
      confirms = #{record.confirms,jdbcType=Integer},
      sort = #{record.sort,jdbcType=INTEGER},
      status = #{record.status,jdbcType=Integer},
      created_at = #{record.created_at,jdbcType=TIMESTAMP},
      updated_at = #{record.updated_at,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.whoiszxl.core.entity.entity.CoinWithBLOBs">
    update coin
    <set>
      <if test="coin_name != null">
        coin_name = #{coin_name,jdbcType=VARCHAR},
      </if>
      <if test="coin_mark != null">
        coin_mark = #{coin_mark,jdbcType=VARCHAR},
      </if>
      <if test="coin_logo != null">
        coin_logo = #{coin_logo,jdbcType=VARCHAR},
      </if>
      <if test="coin_type != null">
        coin_type = #{coin_type,jdbcType=VARCHAR},
      </if>
      <if test="coin_total_num != null">
        coin_total_num = #{coin_total_num,jdbcType=DECIMAL},
      </if>
      <if test="coin_decimals_num != null">
        coin_decimals_num = #{coin_decimals_num,jdbcType=INTEGER},
      </if>
      <if test="coin_buy_fee != null">
        coin_buy_fee = #{coin_buy_fee,jdbcType=DECIMAL},
      </if>
      <if test="coin_sell_fee != null">
        coin_sell_fee = #{coin_sell_fee,jdbcType=DECIMAL},
      </if>
      <if test="coin_url != null">
        coin_url = #{coin_url,jdbcType=VARCHAR},
      </if>
      <if test="contract_address != null">
        contract_address = #{contract_address,jdbcType=VARCHAR},
      </if>
      <if test="rpc_url != null">
        rpc_url = #{rpc_url,jdbcType=VARCHAR},
      </if>
      <if test="rpc_username != null">
        rpc_username = #{rpc_username,jdbcType=VARCHAR},
      </if>
      <if test="rpc_password != null">
        rpc_password = #{rpc_password,jdbcType=VARCHAR},
      </if>
      <if test="max_withdraw != null">
        max_withdraw = #{max_withdraw,jdbcType=DECIMAL},
      </if>
      <if test="min_withdraw != null">
        min_withdraw = #{min_withdraw,jdbcType=DECIMAL},
      </if>
      <if test="fee_withdraw != null">
        fee_withdraw = #{fee_withdraw,jdbcType=DECIMAL},
      </if>
      <if test="wallet_url != null">
        wallet_url = #{wallet_url,jdbcType=VARCHAR},
      </if>
      <if test="wallet_key != null">
        wallet_key = #{wallet_key,jdbcType=VARCHAR},
      </if>
      <if test="confirms != null">
        confirms = #{confirms,jdbcType=Integer},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=Integer},
      </if>
      <if test="created_at != null">
        created_at = #{created_at,jdbcType=TIMESTAMP},
      </if>
      <if test="updated_at != null">
        updated_at = #{updated_at,jdbcType=TIMESTAMP},
      </if>
      <if test="coin_content != null">
        coin_content = #{coin_content,jdbcType=LONGVARCHAR},
      </if>
      <if test="contract_abi != null">
        contract_abi = #{contract_abi,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.whoiszxl.core.entity.entity.CoinWithBLOBs">
    update coin
    set coin_name = #{coin_name,jdbcType=VARCHAR},
      coin_mark = #{coin_mark,jdbcType=VARCHAR},
      coin_logo = #{coin_logo,jdbcType=VARCHAR},
      coin_type = #{coin_type,jdbcType=VARCHAR},
      coin_total_num = #{coin_total_num,jdbcType=DECIMAL},
      coin_decimals_num = #{coin_decimals_num,jdbcType=INTEGER},
      coin_buy_fee = #{coin_buy_fee,jdbcType=DECIMAL},
      coin_sell_fee = #{coin_sell_fee,jdbcType=DECIMAL},
      coin_url = #{coin_url,jdbcType=VARCHAR},
      contract_address = #{contract_address,jdbcType=VARCHAR},
      rpc_url = #{rpc_url,jdbcType=VARCHAR},
      rpc_username = #{rpc_username,jdbcType=VARCHAR},
      rpc_password = #{rpc_password,jdbcType=VARCHAR},
      max_withdraw = #{max_withdraw,jdbcType=DECIMAL},
      min_withdraw = #{min_withdraw,jdbcType=DECIMAL},
      fee_withdraw = #{fee_withdraw,jdbcType=DECIMAL},
      wallet_url = #{wallet_url,jdbcType=VARCHAR},
      wallet_key = #{wallet_key,jdbcType=VARCHAR},
      confirms = #{confirms,jdbcType=Integer},
      sort = #{sort,jdbcType=INTEGER},
      status = #{status,jdbcType=Integer},
      created_at = #{created_at,jdbcType=TIMESTAMP},
      updated_at = #{updated_at,jdbcType=TIMESTAMP},
      coin_content = #{coin_content,jdbcType=LONGVARCHAR},
      contract_abi = #{contract_abi,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.whoiszxl.core.entity.entity.Coin">
    update coin
    set coin_name = #{coin_name,jdbcType=VARCHAR},
      coin_mark = #{coin_mark,jdbcType=VARCHAR},
      coin_logo = #{coin_logo,jdbcType=VARCHAR},
      coin_type = #{coin_type,jdbcType=VARCHAR},
      coin_total_num = #{coin_total_num,jdbcType=DECIMAL},
      coin_decimals_num = #{coin_decimals_num,jdbcType=INTEGER},
      coin_buy_fee = #{coin_buy_fee,jdbcType=DECIMAL},
      coin_sell_fee = #{coin_sell_fee,jdbcType=DECIMAL},
      coin_url = #{coin_url,jdbcType=VARCHAR},
      contract_address = #{contract_address,jdbcType=VARCHAR},
      rpc_url = #{rpc_url,jdbcType=VARCHAR},
      rpc_username = #{rpc_username,jdbcType=VARCHAR},
      rpc_password = #{rpc_password,jdbcType=VARCHAR},
      max_withdraw = #{max_withdraw,jdbcType=DECIMAL},
      min_withdraw = #{min_withdraw,jdbcType=DECIMAL},
      fee_withdraw = #{fee_withdraw,jdbcType=DECIMAL},
      wallet_url = #{wallet_url,jdbcType=VARCHAR},
      wallet_key = #{wallet_key,jdbcType=VARCHAR},
      confirms = #{confirms,jdbcType=Integer},
      sort = #{sort,jdbcType=INTEGER},
      status = #{status,jdbcType=Integer},
      created_at = #{created_at,jdbcType=TIMESTAMP},
      updated_at = #{updated_at,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>